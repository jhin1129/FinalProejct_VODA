<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.finalproject.voda.admin.model.mapper.AdminMapper">

<!-- 	<sql id="selectCviewSql">
		SELECT
		    CV_NO,
		    CV_DATE,
		    CV_COUNT 
		FROM CVIEW
	</sql>	
	<sql id="selectVisitSql">
		SELECT
		    V_NO,
		    V_DATE,
		    V_COUNT 
		FROM VISIT
	</sql>	-->

	<sql id="NoticeListSql">
		SELECT
		    N.N_NO, 
		    N.N_TITLE, 
		    N.N_WRITERNO, 
		    N.N_ID, 
		    N.N_CONTENT, 
		    N.N_ORIGINAL_FILENAME, 
		    N.N_RENAMED_FILENAME, 
		    N.N_READCOUNT, 
		    N.N_STATUS, 
		    N.N_CREATE_DATE, 
		    N.N_TOPTITLE
		FROM NOTICE N
		JOIN MEMBER M ON (N.N_WRITERNO = M.M_NO)
		WHERE N.N_STATUS = 'Y'
	</sql>	 
	
	<resultMap type="Cview" id="CviewResultMap">
		<id property="cViewNo" column="CV_NO"/>
		<result property="cViewDate" column="CV_DATE"/>
		<result property="cViewCount" column="CV_COUNT"/>
	</resultMap>

	<resultMap type="Visit" id="VisitResultMap">
		<id property="visitNo" column="V_NO"/>
		<result property="visitDate" column="V_DATE"/>
		<result property="visitCount" column="V_COUNT"/>
	</resultMap>
	
	<resultMap type="Member" id="MemberResultMap">
		<id property="m_no" column="M_NO"/>
		<result property="m_id" column="M_ID"/>
		<result property="m_joinDate" column="M_JOINDATE"/>
		<result property="m_status" column="M_STATUS"/>
	</resultMap>
	
	<resultMap type="Product" id="ProductResultMap">
		<id property="pno" column="P_NO"/>
		<result property="pname" column="P_NAME"/>
		<result property="prenamefile" column="P_RENAMEFILE"/>
		<result property="pstatus" column="P_STATUS"/>
	</resultMap>
	
	<resultMap type="Notice" id="NoticeResultMap">
		<id property="noticeno" column="N_NO"/>
		<result property="noticeTitle" column="N_TITLE"/>
		<result property="noticeWriterNo" column="N_WRITERNO"/>
		<result property="noticeWriterId" column="N_ID"/>
		<result property="noticeContent" column="N_CONTENT"/>
		<result property="noticeOriginalFileName" column="N_ORIGINAL_FILENAME"/>
		<result property="noticeRenamedFileName" column="N_RENAMED_FILENAME"/>
		<result property="noticeReadCount" column="N_READCOUNT"/>
		<result property="noticeStatus" column="N_STATUS"/>
		<result property="noticeCreateDate" column="N_CREATE_DATE"/>
		<result property="noticeTopTitle" column="N_TOPTITLE"/>
	</resultMap>
	
	<!-- 조회수 전체 조회 (테스트용 컬럼수별) -->
	<select id="selectViewCount" resultType="_int">
		SELECT COUNT(*) FROM CVIEW
	</select>
	
	<!-- 회원관리테이블 전체 조회 -->
	<select id="selectMemberCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
	</select>

	<!-- 회원관리테이블 전체 조회 정렬 -->
	<select id="selectAllMember" resultMap="MemberResultMap">
		SELECT M_NO, 
			   M_ID, 
			   M_JOINDATE, 
			   M_STATUS
		FROM MEMBER
	</select>

	<!-- 상품관리테이블 전체 조회 -->
	<select id="selectProductCount" resultType="_int">
		SELECT COUNT(*) FROM PRODUCT
	</select>

	<!-- 상품관리테이블 전체 조회 정렬 -->
	<select id="selectAllProduct" resultMap="ProductResultMap">
		SELECT P_NO, 
			   P_NAME, 
			   P_RENAMEFILE, 
			   P_STATUS
		FROM PRODUCT
		WHERE P_STATUS = 'Y'
	</select>
	
	<!-- 공지사항 전체 조회 -->
	<select id="selectNoticeCount" resultType="_int">
		SELECT COUNT(*) FROM NOTICE WHERE N_STATUS='Y'
	</select>
	
	<!-- 공지사항 전체 조회 정렬 -->
	<select id="selectAllNotice" resultMap="NoticeResultMap">
		<include refid="NoticeListSql"></include>
		ORDER BY N.N_NO DESC
	</select>
	
	<!-- 공지사항 상세 조회 -->
		<select id="selectNoticeByNo" parameterType="_int" resultMap="NoticeResultMap">
		<include refid="NoticeListSql"></include>
		AND N.N_NO = #{no}
	</select>	
	
	<!-- 공지사항 등록 -->
	<insert id="insertNotice" parameterType="Notice" useGeneratedKeys="true" keyProperty="noticeno" keyColumn="N_NO">
		INSERT INTO NOTICE (
			N_NO,
			N_TITLE,
			N_WRITERNO,
			N_ID,
			N_CONTENT,
			N_ORIGINAL_FILENAME,
			N_RENAMED_FILENAME,
			N_READCOUNT,
			N_STATUS,
			N_CREATE_DATE,
			N_TOPTITLE
		)
		VALUES (
			SEQ_NOTICE_NO.NEXTVAL,
			#{noticeTitle},
			#{noticeWriterNo},
			#{noticeWriterId},
			#{noticeContent},
			#{noticeOriginalFileName},
			#{noticeRenamedFileName},
			#{noticeReadCount},
			#{noticeStatus},
			DEFAULT,
			#{noticeTopTitle}
		)
	</insert>
	
	<!-- 공지사항 삭제 (STATUS = 'N')-->
	<update id="updateNoticeStatus" parameterType="map">
		UPDATE NOTICE SET N_STATUS = #{noticeStatus} WHERE N_NO = #{noticeno}
	</update>
</mapper>
